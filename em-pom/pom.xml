<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">


    <modelVersion>4.0.0</modelVersion>
    <groupId>com.architecture.employeeManagement</groupId>
    <artifactId>em-pom</artifactId>
    <packaging>pom</packaging>
    <version>${project.version}</version>
    <name>em-pom</name>
    <url>http://maven.apache.org</url>


    <properties>
        <!-- project properties start-->
        <project.version>1.0.0</project.version>
        <java.version>1.8</java.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- project properties end-->

        <!-- spring properties start -->
        <spring.version>4.3.4.RELEASE</spring.version>
        <!-- spring properties end -->

        <!--redis properties start -->
        <jedis.version>2.9.0</jedis.version>
        <redis.spring.version>1.7.5.RELEASE</redis.spring.version>
        <!--redis properties end -->

        <!-- test properties start -->
        <junit.version>4.12</junit.version>
        <!-- test properties end -->

        <!-- log properties start -->
        <slf4j.version>1.7.20</slf4j.version>
        <logback.version>1.1.7</logback.version>
        <logback.ext.spring.version>0.1.4</logback.ext.spring.version>
        <!-- log properties end -->

        <!-- activemq properties start -->
        <activemq.version>5.14.0</activemq.version>
        <!-- activemq properties end -->

        <!-- json properties start -->
        <jackson.version>2.8.4</jackson.version>
        <jackson1.version>1.9.13</jackson1.version>
        <jackson.dataformat.msgpack.version>0.8.11</jackson.dataformat.msgpack.version>
        <fastjson.version>1.2.11</fastjson.version>
        <!-- json properties end -->

        <!-- mysql properties start -->
        <mysql.version>5.1.19</mysql.version>
        <c3p0.version>0.9.5.2</c3p0.version>
        <!-- mysql properties start -->

        <!-- mybatis properties start -->
        <mybatis.version>3.4.1</mybatis.version>
        <mybatis.spring.version>1.3.0</mybatis.spring.version>
        <pagehelper.version>4.1.6</pagehelper.version>
        <tk.mapper.version>3.3.8</tk.mapper.version>
        <!-- mybatis properties start -->

        <!-- servlet api and jstl properties start -->
        <javax.servlet.jsp.jstl-api.version>1.2</javax.servlet.jsp.jstl-api.version>
        <javax.servlet.api.version>3.0.1</javax.servlet.api.version>
        <jsp.api.version>2.1</jsp.api.version>
        <!-- servlet api and jstl properties end -->

        <!-- @Inject properties start -->
        <inject.version>1</inject.version>
        <!-- @Inject properties end -->

        <!-- aspectjrt properties start -->
        <aspectjrt.version>1.8.6</aspectjrt.version>
        <!-- aspectjrt properties end -->

        <!-- ehcache properties start -->
        <ehcache.version>2.10.3</ehcache.version>
        <!-- ehcache properties end -->

        <!-- time operator properties start-->
        <joda-time.version>2.9.7</joda-time.version>
        <!-- time operator properties end-->

        <!--mongodb properties start-->
        <mongodb.version>3.4.0</mongodb.version>
        <mongodb.spring.version>1.9.5.RELEASE</mongodb.spring.version>
        <!--mongodb properties end-->

        <!--dubbo properties start-->
        <dubbo.version>2.5.3</dubbo.version>
        <!--dubbo properties end-->
        <!-- orika properties start-->
        <orika.version>1.4.6</orika.version>
        <concurrentlinkedhashmap-lru.version>1.4.2</concurrentlinkedhashmap-lru.version>
        <!-- orika properties end-->
        <commons-lang3.version>3.5</commons-lang3.version>

    </properties>

    <modules>
        <module>../em-web</module>
        <module>../em-service</module>
        <module>../em-commons</module>
        <module>../em-proxy</module>
        <module>../em-repository</module>
    </modules>


    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>


        <!--这个jar 文件包含Spring 框架基本的核心工具类。
            Spring 其它组件要都要使用到这个包里的类，是其它组件的基本核心，
            当然你也可以在自己的应用系统中使用这些工具类。
            外部依赖Commons Logging， (Log4J)-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <!--移除spring-core默认的日志依赖-->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!--   Spring单元测试jar
                外部依赖spring-core，(CGLIB)。-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>


        <!--   这个jar 文件是所有应用都要用到的，它包含访问配置文件、创建和管理bean
               以及进行Inversion of Control / Dependency Injection（IoC/DI）操作相关的所有类。
               如果应用只需基本的IoC/DI 支持，引入spring-core.jar 及spring-beans.jar 文件就可以了。
               外部依赖spring-core，(CGLIB)。-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!--  主要就是封装了spring对于事物的控制
              外部依赖spring-core，spring-beans-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Spring的JDBC框架能够承担资源管理和异常处理的工作。对于JDBC来说，Spring提供了3个模板类
            JdbcTemplate：Spring里最基本的JDBC模板，利用JDBC和简单的索引参数查询提供对数据库的简单访问。
            NamedParameterJdbcTemplate：能够在执行查询时把值绑定到SQL里的命名参数，而不是使用索引参数。
            SimpleJdbcTemplate：利用Java 5 的特性，比如自动装箱、通用（generic）和可变参数类表来简化JDBC模板的使用。
            外部依赖spring-beans,spring-core,spring-tx-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--这个jar 文件包含在应用中使用Spring 的AOP 特性时所需的类和源码级元数据支持。
            使用基于AOP 的Spring特性，如声明型事务管理（Declarative Transaction Management），也要在应用里包含这个jar包。
            外部依赖spring-core， spring-beans-->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中，比如Eclipse AJDT。
            外部依赖。aspectj-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- aspectj -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjrt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectjrt.version}</version>
        </dependency>


        <!--这个jar 是spring的语言表达包。
            外部依赖spring-beans -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!--这个jar 文件为Spring 核心提供了大量扩展。
            可以找到使用Spring ApplicationContext特性时所需的全部类，JDNI 所需的全部类，
            instrumentation组件以及校验Validation 方面的相关类。
            外部依赖spring-beans, spring-aop ,spring-core ,spring-expression-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--   这个jar 文件包含支持UI模版（Velocity，FreeMarker，JasperReports），
               邮件服务，缓存Cache（EHCache），任务计划Scheduling（quartz）方面的类。
               外部依赖spring-context,spring-core， spring-beans -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--这个jar 文件包含Web 应用开发时，用到Spring 框架时所需的核心类，
            包括自动载入Web Application Context 特性的类、
            Struts 与JSF 集成类、文件上传的支持类、Filter 类和大量工具辅助类。
            外部依赖spring-context, spring-aop,spring-beans,spring-core-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--这个jar 文件包含Spring MVC 框架相关的所有类。
            包括框架的Servlets，Web MVC框架，控制器和视图支持。
            当然，如果你的应用使用了独立的MVC 框架，则无需这个JAR 文件里的任何类。
            外部依赖spring-com.web,spring-context, spring-aop,spring-beans,spring-core,spring-expression-->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!--该模块从使用了 Spring Integration 工程的核心概念如 Message, MessageChannel,MessageHandler
            和别的一些可以作为消息架构的基础组件。
            这个模块同样也提供了一些映射消息到方法的注解，类似于基于编程模型的spring mvc注解。
            外部依赖spring-context,spring-core，spring-beans -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--spring提供了一个jms集成框架，这个框架如spring 集成jdbc api一样，简化了jms api的使用。
          外部依赖spring-messaging,spring-context, spring-aop,spring-beans,spring-core,spring-tx-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.logback-extensions</groupId>
            <artifactId>logback-ext-spring</artifactId>
            <version>${logback.ext.spring.version}</version>
        </dependency>


        <!--引入redis-->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${redis.spring.version}</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>


        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
        </dependency>


        <!--json-->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>${jackson1.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson1.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${jackson1.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.msgpack</groupId>
            <artifactId>jackson-dataformat-msgpack</artifactId>
            <version>${jackson.dataformat.msgpack.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>


        <!-- @Inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${inject.version}</version>
        </dependency>


        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp.api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${javax.servlet.jsp.jstl-api.version}</version>
        </dependency>


        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>${mongodb.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-mongodb</artifactId>
            <version>${mongodb.spring.version}</version>
        </dependency>


        <!-- activeMQ -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <version>${activemq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
            <version>${activemq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-pool</artifactId>
            <version>${activemq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-spring</artifactId>
            <version>${activemq.version}</version>
        </dependency>


        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>


        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <!-- 连接池 -->
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3p0.version}</version>
        </dependency>


        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis.spring.version}</version>
        </dependency>
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper</artifactId>
            <version>${tk.mapper.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>


        <!--引入ElasticSearch-->
        <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-elasticsearch</artifactId>
            <version>2.0.0.RELEASE</version>
        </dependency>

        <!--  使用2.2.3版本是因为我本地装的是2.3.3版本
          jar包需要与版本号一致
    -->
        <!-- https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch -->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>2.3.3</version>
        </dependency>


        <!-- orika -->
        <dependency>
            <groupId>ma.glasnost.orika</groupId>
            <artifactId>orika-core</artifactId>
            <version>${orika.version}</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
            <artifactId>concurrentlinkedhashmap-lru</artifactId>
            <version>${concurrentlinkedhashmap-lru.version}</version>
        </dependency>
        

    </dependencies>


    <profiles>
        <profile>
            <id>cie</id>
            <properties>
                <profile.path>config/cie</profile.path>
            </properties>
        </profile>

        <profile>
            <id>dev</id>
            <properties>
                <profile.path>config/dev</profile.path>
            </properties>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>prd</id>
            <properties>
                <profile.path>config/prd</profile.path>
            </properties>
        </profile>

        <profile>
            <id>sit</id>
            <properties>
                <profile.path>config/sit</profile.path>
            </properties>
        </profile>

    </profiles>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources/${profile.path}</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/prd/*.*</exclude>
                    <exclude>**/cie/*.*</exclude>
                    <exclude>**/sit/*.*</exclude>
                    <exclude>**/dev/*.*</exclude>
                </excludes>
            </resource>
        </resources>


        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <testSource>${java.version}</testSource>
                    <testTarget>${java.version}</testTarget>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>
